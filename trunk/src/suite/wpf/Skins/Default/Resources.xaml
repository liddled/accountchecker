<ResourceDictionary 
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation" 
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml" 
    xmlns:f="clr-namespace:DL.Framework.WPF;assembly=DL.Framework.WPF"
    xmlns:l="clr-namespace:DL.AccountChecker.Suite.WPF">

    <SolidColorBrush x:Key="BlackColor" Color="#000000" />
    <SolidColorBrush x:Key="WhiteColor" Color="#FFFFFF" />
    <SolidColorBrush x:Key="GreyColor" Color="#CCCCCC" />
    <SolidColorBrush x:Key="DarkGreyColor" Color="#3A3A3A" />
    <SolidColorBrush x:Key="YellowColor" Color="#FFE32D" />
    <SolidColorBrush x:Key="LinkColor" Color="#FFE32D" />

    <SolidColorBrush x:Key="AccountCheckerHeaderColor" Color="#007F0E" />

    <SolidColorBrush x:Key="TransactionColor" Color="#0094FF" />
    <SolidColorBrush x:Key="IncomeColor" Color="#007F0E" />
    <SolidColorBrush x:Key="OutcomeColor" Color="#CC0000" />

    <Color x:Key="WindowBackgroundGradientStartColor">#FFFDF9</Color>
    <Color x:Key="WindowBackgroundGradientStopColor">#7B7B7A</Color>

    <SolidColorBrush x:Key="ElipseButtonBorderColor" Color="#3E6D8E" />
    <SolidColorBrush x:Key="ElipseButtonBackgroundColor" Color="#E0EAF1" />
    <SolidColorBrush x:Key="ElipseButtonTextColor" Color="#3A3A3A" />
    <SolidColorBrush x:Key="ElipseButtonBackgroundMouseOverColor" Color="#3E6D8E" />
    <SolidColorBrush x:Key="ElipseButtonTextMouseOverColor" Color="#E0EAF1" />

    <SolidColorBrush x:Key="CardHeaderBackground" Color="#FF353534" />
    <SolidColorBrush x:Key="CardHeaderBorder" Color="#FF353534" />
    
    <SolidColorBrush x:Key="BalanceBoxBackgroundColor" Color="#CCCCCC" />
    <SolidColorBrush x:Key="BalanceBoxTextColor" Color="#000000" />

    <SolidColorBrush x:Key="IncomeBoxBackgroundColor" Color="#007F0E" />
    <SolidColorBrush x:Key="IncomeBoxTextColor" Color="#FFFFFF" />

    <SolidColorBrush x:Key="OutcomeBoxBackgroundColor" Color="#CC0000" />
    <SolidColorBrush x:Key="OutcomeBoxTextColor" Color="#FFFFFF" />

    <SolidColorBrush x:Key="TransactionBoxBackgroundColor" Color="#0094FF" />
    <SolidColorBrush x:Key="TransactionBoxTextColor" Color="#FFFFFF" />

    <f:BusDateConverter x:Key="busDateConverter" />
    <f:CultureConverter x:Key="languageConverter" />
    <f:IsEqualOrGreaterThanConverter x:Key="isEqualOrGreaterThanConverter" />

    <Thickness x:Key="IndentMargin" Left="15" />

    <!-- Window -->
    <Style x:Key="WindowStyle" TargetType="Window">
        <Setter Property="Background">
            <Setter.Value>
                <!--<ImageBrush ImageSource="../../Content/Images/bg.jpg" />-->
                <!--<SolidColorBrush Color="#FFFFFF"/>-->
                <LinearGradientBrush StartPoint="0,0" EndPoint="0,1">
                    <LinearGradientBrush.GradientStops>
                        <GradientStopCollection>
                            <GradientStop Color="{StaticResource WindowBackgroundGradientStartColor}" Offset="0" />
                            <GradientStop Color="{StaticResource WindowBackgroundGradientStopColor}" Offset="1" />
                        </GradientStopCollection>
                    </LinearGradientBrush.GradientStops>
                </LinearGradientBrush>
            </Setter.Value>
        </Setter>
        <Setter Property="FontFamily" Value="Arial,Helvetica" />
        <Setter Property="Icon">
            <Setter.Value>
                <BitmapImage UriSource="pack://application:,,,/DL.AccountChecker.Suite.WPF;component/Content/Images/favicon.ico" />
            </Setter.Value>
        </Setter>
    </Style>
    
    <!-- Layout -->
    <Style x:Key="LayoutStyle" TargetType="Grid">
        <Setter Property="Margin" Value="20 10 20 10" />
    </Style>
    
    <!-- Header -->
    <Style x:Key="HeaderStyle" TargetType="UserControl">
    </Style>

    <Style x:Key="HeaderTitle" TargetType="TextBlock">
        <Setter Property="FontFamily" Value="Verdana" />
        <Setter Property="FontSize" Value="16" />
        <Setter Property="Foreground" Value="#797E82" />
        <Setter Property="VerticalAlignment" Value="Center" />
    </Style>

    <!-- ContentCard -->
    <Style x:Key="ContentCard" TargetType="{x:Type f:ContentCard}" BasedOn="{StaticResource BaseContentCard}">
        <Setter Property="BorderBrush" Value="{StaticResource CardHeaderBorder}" />
        <Setter Property="DogEar" Value="25" />
        <Setter Property="MinHeight" Value="50" />
    </Style>
    
    <Style x:Key="CardHeader" TargetType="Grid">
        <Setter Property="Background" Value="{StaticResource CardHeaderBackground}" />
        <Setter Property="Margin" Value="5,10,5,0" />
    </Style>

    <Style x:Key="CardHeaderTitle" TargetType="TextBlock">
        <Setter Property="Foreground" Value="{StaticResource WhiteColor}" />
        <Setter Property="FontSize" Value="24" />
    </Style>

    <Style x:Key="CardHeaderSubTitle" TargetType="TextBlock">
        <Setter Property="Foreground" Value="{StaticResource GreyColor}" />
        <Setter Property="FontSize" Value="12" />
    </Style>

    <Style x:Key="CardHeaderBreadcrumb" TargetType="Grid">
    </Style>
    
    <Style x:Key="CardContent" TargetType="Grid">
        <Setter Property="Margin" Value="10" />
    </Style>

    <!-- Menu -->
    <Style x:Key="MenuStyle" TargetType="UserControl">
        <Setter Property="FontSize" Value="16" />
        <Setter Property="Foreground" Value="{StaticResource WhiteColor}" />
        <Setter Property="Padding" Value="65 20" />
    </Style>

    <Style x:Key="MenuButton" TargetType="Button" BasedOn="{StaticResource LinkButton}">
        <Setter Property="Margin" Value="0,0,20,0" />
        <Setter Property="VerticalAlignment" Value="Center" />
    </Style>

    <!-- Navigation -->
    <Style TargetType="{x:Type f:NavigationButton}">
        <Setter Property="Cursor" Value="Hand" />
        <Setter Property="Foreground" Value="White" />
        <Setter Property="Margin" Value="15,7" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type f:NavigationButton}">
                    <ControlTemplate.Resources>
                        <f:FormattingConverter x:Key="formattingConverter" />
                        <Storyboard x:Key="OnMouseEnter1">
                            <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="NavigationButton" Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[0].(ScaleTransform.ScaleX)">
                                <SplineDoubleKeyFrame KeyTime="00:00:00.1" Value="1.1"/>
                            </DoubleAnimationUsingKeyFrames>
                            <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="NavigationButton" Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[0].(ScaleTransform.ScaleY)">
                                <SplineDoubleKeyFrame KeyTime="00:00:00.1" Value="1.1"/>
                            </DoubleAnimationUsingKeyFrames>
                        </Storyboard>
                        <Storyboard x:Key="OnMouseLeave1">
                            <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="NavigationButton" Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[0].(ScaleTransform.ScaleX)">
                                <SplineDoubleKeyFrame KeyTime="00:00:00.1" Value="1"/>
                            </DoubleAnimationUsingKeyFrames>
                            <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="NavigationButton" Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[0].(ScaleTransform.ScaleY)">
                                <SplineDoubleKeyFrame KeyTime="00:00:00.1" Value="1"/>
                            </DoubleAnimationUsingKeyFrames>
                        </Storyboard>
                    </ControlTemplate.Resources>
                    <StackPanel x:Name="NavigationButton" RenderTransformOrigin="0.5,0.5">
                        <StackPanel.RenderTransform>
                            <TransformGroup>
                                <ScaleTransform ScaleX="1" ScaleY="1"/>
                            </TransformGroup>
                        </StackPanel.RenderTransform>
                        <StackPanel Margin="2" Background="Transparent">
                            <Grid Margin="0,0,0,-5" HorizontalAlignment="Right">
                                <Ellipse x:Name="elp" Width="20" Height="20" Fill="Black" Stroke="Black" StrokeThickness="1" />
                                <TextBlock x:Name="tb" FontSize="12" Text="{TemplateBinding ActiveRecordCount, Converter={StaticResource formattingConverter}, ConverterParameter=\{0:F0\}}" VerticalAlignment="Center" HorizontalAlignment="Center" />
                            </Grid>
                            <Image Margin="0,0,0,5"  Source="{TemplateBinding Image}" />
                            <TextBlock Text="{TemplateBinding Content}" HorizontalAlignment="Center" />
                        </StackPanel>
                    </StackPanel>
                    <ControlTemplate.Triggers>
                        <EventTrigger RoutedEvent="Mouse.MouseLeave" SourceName="NavigationButton">
                            <BeginStoryboard Storyboard="{StaticResource OnMouseLeave1}"/>
                        </EventTrigger>
                        <EventTrigger RoutedEvent="Mouse.MouseEnter" SourceName="NavigationButton">
                            <BeginStoryboard Storyboard="{StaticResource OnMouseEnter1}"/>
                        </EventTrigger>
                        <Trigger Property="ActiveRecordCount" Value="0">
                            <Setter TargetName="elp" Property="Visibility" Value="Hidden" />
                            <Setter TargetName="tb" Property="Visibility" Value="Hidden" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!-- Page -->
    <Style x:Key="PageTitleBorder" TargetType="Border">
        <Setter Property="BorderThickness" Value="0,0,0,5" />
    </Style>

    <Style x:Key="PageTitle" TargetType="TextBlock">
        <Setter Property="Foreground" Value="#3A3A3A" />
        <Setter Property="FontSize" Value="24" />
        <Setter Property="FontWeight" Value="Bold" />
        <Setter Property="Margin" Value="0,10" />
    </Style>

    <Style x:Key="PageHeading" TargetType="Button" BasedOn="{StaticResource LinkButton}">
        <Setter Property="FontSize" Value="20" />
        <Setter Property="FontWeight" Value="Bold" />
        <Setter Property="HorizontalAlignment" Value="Left" />
        <Setter Property="Margin" Value="0,0,0,10" />
    </Style>

    <Style x:Key="PanelSeparator" TargetType="{x:Type Separator}">
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="Height" Value="2" />
    </Style>

    <!-- ListBox Item Border -->
    <Style x:Key="ListBoxItemBorder" TargetType="{x:Type Border}">
        <Setter Property="BorderThickness" Value="2" />
        <Setter Property="CornerRadius" Value="5" />
        <Setter Property="Cursor" Value="Hand" />
    </Style>

    <Style x:Key="ItemSeparator" TargetType="{x:Type Separator}">
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="Height" Value="0.5" />
    </Style>

    <!-- Box -->
    <Style x:Key="BoxBorder" TargetType="{x:Type Border}">
        <Setter Property="CornerRadius" Value="5" />
        <Setter Property="Margin" Value="10,0,0,0" />
        <Setter Property="Padding" Value="10,6" />
        <Setter Property="Width" Value="130" />
    </Style>
    
    <Style x:Key="BoxHeading" TargetType="{x:Type TextBlock}">
        <Setter Property="FontSize" Value="18" />
        <Setter Property="HorizontalAlignment" Value="Center" />
    </Style>

    <Style x:Key="BoxSeparator" TargetType="{x:Type Separator}">
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="Height" Value="0.5" />
    </Style>

    <Style x:Key="BoxText" TargetType="{x:Type TextBlock}">
        <Setter Property="FontSize" Value="9" />
        <Setter Property="HorizontalAlignment" Value="Center" />
    </Style>

    <Style x:Key="ElipseButtonStyle" TargetType="{x:Type Button}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border Name="ElipseBorder" CornerRadius="5" BorderBrush="{StaticResource ElipseButtonBorderColor}" BorderThickness="0,0,1,1">
                        <ContentPresenter VerticalAlignment="Center"
                                          HorizontalAlignment="Center"
                                          Margin="{TemplateBinding Padding}" />
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Cursor" Value="Hand" />
                            <Setter Property="Background" Value="{StaticResource ElipseButtonBackgroundMouseOverColor}" TargetName="ElipseBorder" />
                            <Setter Property="Foreground" Value="{StaticResource ElipseButtonTextMouseOverColor}" />
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="False">
                            <Setter Property="Background" Value="{StaticResource ElipseButtonBackgroundColor}" TargetName="ElipseBorder" />
                            <Setter Property="Foreground" Value="{StaticResource ElipseButtonTextColor}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="ExcludeIncludeButtonStyle" TargetType="Button">
        <Setter Property="Cursor" Value="Hand"/>
        <Setter Property="OverridesDefaultStyle" Value="True"/>
        <Setter Property="Margin" Value="5"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Border BorderThickness="0" Background="{TemplateBinding Background}">
                        <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center" Width="11" Height="11" />
                    </Border>
                    <ControlTemplate.Triggers>
                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <!--<Condition Binding="{TemplateBinding IsMouseOver}" Value="False"/>-->
                                <Condition Binding="{Binding RelativeSource={RelativeSource Self}, Path=IsMouseOver}" Value="False"/>
                                <Condition Binding="{Binding}" Value="False"/>
                            </MultiDataTrigger.Conditions>
                            <Setter Property="Background">
                                <Setter.Value>
                                    <ImageBrush ImageSource="pack://application:,,,/DL.AccountChecker.Suite.WPF;component/Content/Images/exclude.png" />
                                </Setter.Value>
                            </Setter>
                        </MultiDataTrigger>
                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding RelativeSource={RelativeSource Self}, Path=IsMouseOver}" Value="True"/>
                                <Condition Binding="{Binding}" Value="False"/>
                            </MultiDataTrigger.Conditions>
                            <Setter Property="Background">
                                <Setter.Value>
                                    <ImageBrush ImageSource="pack://application:,,,/DL.AccountChecker.Suite.WPF;component/Content/Images/exclude_hover.png" />
                                </Setter.Value>
                            </Setter>
                        </MultiDataTrigger>
                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding RelativeSource={RelativeSource Self}, Path=IsMouseOver}" Value="False"/>
                                <Condition Binding="{Binding}" Value="True"/>
                            </MultiDataTrigger.Conditions>
                            <Setter Property="Background">
                                <Setter.Value>
                                    <ImageBrush ImageSource="pack://application:,,,/DL.AccountChecker.Suite.WPF;component/Content/Images/include.png" />
                                </Setter.Value>
                            </Setter>
                        </MultiDataTrigger>
                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding RelativeSource={RelativeSource Self}, Path=IsMouseOver}" Value="True"/>
                                <Condition Binding="{Binding}" Value="True"/>
                            </MultiDataTrigger.Conditions>
                            <Setter Property="Background">
                                <Setter.Value>
                                    <ImageBrush ImageSource="pack://application:,,,/DL.AccountChecker.Suite.WPF;component/Content/Images/include_hover.png" />
                                </Setter.Value>
                            </Setter>
                        </MultiDataTrigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

</ResourceDictionary>